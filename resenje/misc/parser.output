Terminals unused in grammar

    TOKEN_MINUS
    TOKEN_SEMI
    TOKEN_DIV
    TOKEN_NEWL
    TOKEN_STRING


Rules useless in parser due to conflicts

   21 operandValue: rname


State 4 conflicts: 2 shift/reduce
State 8 conflicts: 1 shift/reduce
State 17 conflicts: 3 reduce/reduce
State 23 conflicts: 3 reduce/reduce
State 31 conflicts: 3 reduce/reduce
State 36 conflicts: 3 reduce/reduce


Grammar

    0 $accept: translation $end

    1 translation: %empty
    2            | line translation

    3 label: TOKEN_SYMBOL TOKEN_COLON

    4 directive: TOKEN_DOT TOKEN_SYMBOL

    5 instruction: opCode
    6            | opCode rname
    7            | opCode operandJump
    8            | opCode rname TOKEN_COMMA operandValue
    9            | opCode rname TOKEN_COMMA rname

   10 line: label
   11     | label instruction
   12     | label directive
   13     | instruction
   14     | directive

   15 opCode: TOKEN_SYMBOL

   16 operandValue: TOKEN_DOLLAR TOKEN_LIT
   17             | TOKEN_DOLLAR TOKEN_SYMBOL
   18             | TOKEN_LIT
   19             | TOKEN_SYMBOL
   20             | TOKEN_PERCENT TOKEN_SYMBOL
   21             | rname
   22             | TOKEN_LPAR rname TOKEN_RPAR
   23             | TOKEN_LPAR rname TOKEN_PLUS TOKEN_LIT TOKEN_RPAR
   24             | TOKEN_LPAR rname TOKEN_PLUS TOKEN_SYMBOL TOKEN_RPAR

   25 operandJump: TOKEN_LIT
   26            | TOKEN_SYMBOL
   27            | TOKEN_PERCENT TOKEN_SYMBOL
   28            | TOKEN_MUL TOKEN_LIT
   29            | TOKEN_MUL TOKEN_SYMBOL
   30            | TOKEN_MUL rname
   31            | TOKEN_MUL TOKEN_LPAR rname TOKEN_RPAR
   32            | TOKEN_MUL TOKEN_LPAR rname TOKEN_PLUS TOKEN_LIT TOKEN_RPAR
   33            | TOKEN_MUL TOKEN_LPAR rname TOKEN_PLUS TOKEN_SYMBOL TOKEN_RPAR

   34 rname: TOKEN_SYMBOL


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    TOKEN_LIT <number> (258) 16 18 23 25 28 32
    TOKEN_SYMBOL <symbol> (259) 3 4 15 17 19 20 24 26 27 29 33 34
    TOKEN_LPAR (260) 22 23 24 31 32 33
    TOKEN_RPAR (261) 22 23 24 31 32 33
    TOKEN_PLUS (262) 23 24 32 33
    TOKEN_MINUS (263)
    TOKEN_SEMI (264)
    TOKEN_COMMA (265) 8 9
    TOKEN_DOT (266) 4
    TOKEN_MUL (267) 28 29 30 31 32 33
    TOKEN_DIV (268)
    TOKEN_COLON (269) 3
    TOKEN_NEWL (270)
    TOKEN_DOLLAR (271) 16 17
    TOKEN_PERCENT (272) 20 27
    TOKEN_STRING <string> (273)


Nonterminals, with rules where they appear

    $accept (19)
        on left: 0
    translation (20)
        on left: 1 2
        on right: 0 2
    label <symbol> (21)
        on left: 3
        on right: 10 11 12
    directive <symbol> (22)
        on left: 4
        on right: 12 14
    instruction <instruction> (23)
        on left: 5 6 7 8 9
        on right: 11 13
    line (24)
        on left: 10 11 12 13 14
        on right: 2
    opCode <symbol> (25)
        on left: 15
        on right: 5 6 7 8 9
    operandValue <operand> (26)
        on left: 16 17 18 19 20 21 22 23 24
        on right: 8
    operandJump <operand> (27)
        on left: 25 26 27 28 29 30 31 32 33
        on right: 7
    rname <symbol> (28)
        on left: 34
        on right: 6 8 9 21 22 23 24 30 31 32 33


State 0

    0 $accept: . translation $end

    TOKEN_SYMBOL  shift, and go to state 1
    TOKEN_DOT     shift, and go to state 2

    $default  reduce using rule 1 (translation)

    translation  go to state 3
    label        go to state 4
    directive    go to state 5
    instruction  go to state 6
    line         go to state 7
    opCode       go to state 8


State 1

    3 label: TOKEN_SYMBOL . TOKEN_COLON
   15 opCode: TOKEN_SYMBOL .

    TOKEN_COLON  shift, and go to state 9

    $default  reduce using rule 15 (opCode)


State 2

    4 directive: TOKEN_DOT . TOKEN_SYMBOL

    TOKEN_SYMBOL  shift, and go to state 10


State 3

    0 $accept: translation . $end

    $end  shift, and go to state 11


State 4

   10 line: label .
   11     | label . instruction
   12     | label . directive

    TOKEN_SYMBOL  shift, and go to state 12
    TOKEN_DOT     shift, and go to state 2

    TOKEN_SYMBOL  [reduce using rule 10 (line)]
    TOKEN_DOT     [reduce using rule 10 (line)]
    $default      reduce using rule 10 (line)

    directive    go to state 13
    instruction  go to state 14
    opCode       go to state 8


State 5

   14 line: directive .

    $default  reduce using rule 14 (line)


State 6

   13 line: instruction .

    $default  reduce using rule 13 (line)


State 7

    2 translation: line . translation

    TOKEN_SYMBOL  shift, and go to state 1
    TOKEN_DOT     shift, and go to state 2

    $default  reduce using rule 1 (translation)

    translation  go to state 15
    label        go to state 4
    directive    go to state 5
    instruction  go to state 6
    line         go to state 7
    opCode       go to state 8


State 8

    5 instruction: opCode .
    6            | opCode . rname
    7            | opCode . operandJump
    8            | opCode . rname TOKEN_COMMA operandValue
    9            | opCode . rname TOKEN_COMMA rname

    TOKEN_LIT      shift, and go to state 16
    TOKEN_SYMBOL   shift, and go to state 17
    TOKEN_MUL      shift, and go to state 18
    TOKEN_PERCENT  shift, and go to state 19

    TOKEN_SYMBOL  [reduce using rule 5 (instruction)]
    $default      reduce using rule 5 (instruction)

    operandJump  go to state 20
    rname        go to state 21


State 9

    3 label: TOKEN_SYMBOL TOKEN_COLON .

    $default  reduce using rule 3 (label)


State 10

    4 directive: TOKEN_DOT TOKEN_SYMBOL .

    $default  reduce using rule 4 (directive)


State 11

    0 $accept: translation $end .

    $default  accept


State 12

   15 opCode: TOKEN_SYMBOL .

    $default  reduce using rule 15 (opCode)


State 13

   12 line: label directive .

    $default  reduce using rule 12 (line)


State 14

   11 line: label instruction .

    $default  reduce using rule 11 (line)


State 15

    2 translation: line translation .

    $default  reduce using rule 2 (translation)


State 16

   25 operandJump: TOKEN_LIT .

    $default  reduce using rule 25 (operandJump)


State 17

   26 operandJump: TOKEN_SYMBOL .
   34 rname: TOKEN_SYMBOL .

    $end          reduce using rule 26 (operandJump)
    $end          [reduce using rule 34 (rname)]
    TOKEN_SYMBOL  reduce using rule 26 (operandJump)
    TOKEN_SYMBOL  [reduce using rule 34 (rname)]
    TOKEN_COMMA   reduce using rule 34 (rname)
    TOKEN_DOT     reduce using rule 26 (operandJump)
    TOKEN_DOT     [reduce using rule 34 (rname)]
    $default      reduce using rule 26 (operandJump)


State 18

   28 operandJump: TOKEN_MUL . TOKEN_LIT
   29            | TOKEN_MUL . TOKEN_SYMBOL
   30            | TOKEN_MUL . rname
   31            | TOKEN_MUL . TOKEN_LPAR rname TOKEN_RPAR
   32            | TOKEN_MUL . TOKEN_LPAR rname TOKEN_PLUS TOKEN_LIT TOKEN_RPAR
   33            | TOKEN_MUL . TOKEN_LPAR rname TOKEN_PLUS TOKEN_SYMBOL TOKEN_RPAR

    TOKEN_LIT     shift, and go to state 22
    TOKEN_SYMBOL  shift, and go to state 23
    TOKEN_LPAR    shift, and go to state 24

    rname  go to state 25


State 19

   27 operandJump: TOKEN_PERCENT . TOKEN_SYMBOL

    TOKEN_SYMBOL  shift, and go to state 26


State 20

    7 instruction: opCode operandJump .

    $default  reduce using rule 7 (instruction)


State 21

    6 instruction: opCode rname .
    8            | opCode rname . TOKEN_COMMA operandValue
    9            | opCode rname . TOKEN_COMMA rname

    TOKEN_COMMA  shift, and go to state 27

    $default  reduce using rule 6 (instruction)


State 22

   28 operandJump: TOKEN_MUL TOKEN_LIT .

    $default  reduce using rule 28 (operandJump)


State 23

   29 operandJump: TOKEN_MUL TOKEN_SYMBOL .
   34 rname: TOKEN_SYMBOL .

    $end          reduce using rule 29 (operandJump)
    $end          [reduce using rule 34 (rname)]
    TOKEN_SYMBOL  reduce using rule 29 (operandJump)
    TOKEN_SYMBOL  [reduce using rule 34 (rname)]
    TOKEN_DOT     reduce using rule 29 (operandJump)
    TOKEN_DOT     [reduce using rule 34 (rname)]
    $default      reduce using rule 29 (operandJump)


State 24

   31 operandJump: TOKEN_MUL TOKEN_LPAR . rname TOKEN_RPAR
   32            | TOKEN_MUL TOKEN_LPAR . rname TOKEN_PLUS TOKEN_LIT TOKEN_RPAR
   33            | TOKEN_MUL TOKEN_LPAR . rname TOKEN_PLUS TOKEN_SYMBOL TOKEN_RPAR

    TOKEN_SYMBOL  shift, and go to state 28

    rname  go to state 29


State 25

   30 operandJump: TOKEN_MUL rname .

    $default  reduce using rule 30 (operandJump)


State 26

   27 operandJump: TOKEN_PERCENT TOKEN_SYMBOL .

    $default  reduce using rule 27 (operandJump)


State 27

    8 instruction: opCode rname TOKEN_COMMA . operandValue
    9            | opCode rname TOKEN_COMMA . rname

    TOKEN_LIT      shift, and go to state 30
    TOKEN_SYMBOL   shift, and go to state 31
    TOKEN_LPAR     shift, and go to state 32
    TOKEN_DOLLAR   shift, and go to state 33
    TOKEN_PERCENT  shift, and go to state 34

    operandValue  go to state 35
    rname         go to state 36


State 28

   34 rname: TOKEN_SYMBOL .

    $default  reduce using rule 34 (rname)


State 29

   31 operandJump: TOKEN_MUL TOKEN_LPAR rname . TOKEN_RPAR
   32            | TOKEN_MUL TOKEN_LPAR rname . TOKEN_PLUS TOKEN_LIT TOKEN_RPAR
   33            | TOKEN_MUL TOKEN_LPAR rname . TOKEN_PLUS TOKEN_SYMBOL TOKEN_RPAR

    TOKEN_RPAR  shift, and go to state 37
    TOKEN_PLUS  shift, and go to state 38


State 30

   18 operandValue: TOKEN_LIT .

    $default  reduce using rule 18 (operandValue)


State 31

   19 operandValue: TOKEN_SYMBOL .
   34 rname: TOKEN_SYMBOL .

    $end          reduce using rule 19 (operandValue)
    $end          [reduce using rule 34 (rname)]
    TOKEN_SYMBOL  reduce using rule 19 (operandValue)
    TOKEN_SYMBOL  [reduce using rule 34 (rname)]
    TOKEN_DOT     reduce using rule 19 (operandValue)
    TOKEN_DOT     [reduce using rule 34 (rname)]
    $default      reduce using rule 19 (operandValue)


State 32

   22 operandValue: TOKEN_LPAR . rname TOKEN_RPAR
   23             | TOKEN_LPAR . rname TOKEN_PLUS TOKEN_LIT TOKEN_RPAR
   24             | TOKEN_LPAR . rname TOKEN_PLUS TOKEN_SYMBOL TOKEN_RPAR

    TOKEN_SYMBOL  shift, and go to state 28

    rname  go to state 39


State 33

   16 operandValue: TOKEN_DOLLAR . TOKEN_LIT
   17             | TOKEN_DOLLAR . TOKEN_SYMBOL

    TOKEN_LIT     shift, and go to state 40
    TOKEN_SYMBOL  shift, and go to state 41


State 34

   20 operandValue: TOKEN_PERCENT . TOKEN_SYMBOL

    TOKEN_SYMBOL  shift, and go to state 42


State 35

    8 instruction: opCode rname TOKEN_COMMA operandValue .

    $default  reduce using rule 8 (instruction)


State 36

    9 instruction: opCode rname TOKEN_COMMA rname .
   21 operandValue: rname .

    $end          reduce using rule 9 (instruction)
    $end          [reduce using rule 21 (operandValue)]
    TOKEN_SYMBOL  reduce using rule 9 (instruction)
    TOKEN_SYMBOL  [reduce using rule 21 (operandValue)]
    TOKEN_DOT     reduce using rule 9 (instruction)
    TOKEN_DOT     [reduce using rule 21 (operandValue)]
    $default      reduce using rule 9 (instruction)


State 37

   31 operandJump: TOKEN_MUL TOKEN_LPAR rname TOKEN_RPAR .

    $default  reduce using rule 31 (operandJump)


State 38

   32 operandJump: TOKEN_MUL TOKEN_LPAR rname TOKEN_PLUS . TOKEN_LIT TOKEN_RPAR
   33            | TOKEN_MUL TOKEN_LPAR rname TOKEN_PLUS . TOKEN_SYMBOL TOKEN_RPAR

    TOKEN_LIT     shift, and go to state 43
    TOKEN_SYMBOL  shift, and go to state 44


State 39

   22 operandValue: TOKEN_LPAR rname . TOKEN_RPAR
   23             | TOKEN_LPAR rname . TOKEN_PLUS TOKEN_LIT TOKEN_RPAR
   24             | TOKEN_LPAR rname . TOKEN_PLUS TOKEN_SYMBOL TOKEN_RPAR

    TOKEN_RPAR  shift, and go to state 45
    TOKEN_PLUS  shift, and go to state 46


State 40

   16 operandValue: TOKEN_DOLLAR TOKEN_LIT .

    $default  reduce using rule 16 (operandValue)


State 41

   17 operandValue: TOKEN_DOLLAR TOKEN_SYMBOL .

    $default  reduce using rule 17 (operandValue)


State 42

   20 operandValue: TOKEN_PERCENT TOKEN_SYMBOL .

    $default  reduce using rule 20 (operandValue)


State 43

   32 operandJump: TOKEN_MUL TOKEN_LPAR rname TOKEN_PLUS TOKEN_LIT . TOKEN_RPAR

    TOKEN_RPAR  shift, and go to state 47


State 44

   33 operandJump: TOKEN_MUL TOKEN_LPAR rname TOKEN_PLUS TOKEN_SYMBOL . TOKEN_RPAR

    TOKEN_RPAR  shift, and go to state 48


State 45

   22 operandValue: TOKEN_LPAR rname TOKEN_RPAR .

    $default  reduce using rule 22 (operandValue)


State 46

   23 operandValue: TOKEN_LPAR rname TOKEN_PLUS . TOKEN_LIT TOKEN_RPAR
   24             | TOKEN_LPAR rname TOKEN_PLUS . TOKEN_SYMBOL TOKEN_RPAR

    TOKEN_LIT     shift, and go to state 49
    TOKEN_SYMBOL  shift, and go to state 50


State 47

   32 operandJump: TOKEN_MUL TOKEN_LPAR rname TOKEN_PLUS TOKEN_LIT TOKEN_RPAR .

    $default  reduce using rule 32 (operandJump)


State 48

   33 operandJump: TOKEN_MUL TOKEN_LPAR rname TOKEN_PLUS TOKEN_SYMBOL TOKEN_RPAR .

    $default  reduce using rule 33 (operandJump)


State 49

   23 operandValue: TOKEN_LPAR rname TOKEN_PLUS TOKEN_LIT . TOKEN_RPAR

    TOKEN_RPAR  shift, and go to state 51


State 50

   24 operandValue: TOKEN_LPAR rname TOKEN_PLUS TOKEN_SYMBOL . TOKEN_RPAR

    TOKEN_RPAR  shift, and go to state 52


State 51

   23 operandValue: TOKEN_LPAR rname TOKEN_PLUS TOKEN_LIT TOKEN_RPAR .

    $default  reduce using rule 23 (operandValue)


State 52

   24 operandValue: TOKEN_LPAR rname TOKEN_PLUS TOKEN_SYMBOL TOKEN_RPAR .

    $default  reduce using rule 24 (operandValue)
